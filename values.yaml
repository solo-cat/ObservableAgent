# Default values for ..
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  aws:
    region: cn-northwest-1
  repository: artifact.onwalk.net
  image:
    repository: artifact.onwalk.net/k8s/aws-cli
    tag: latest
    pullPolicy: IfNotPresent
prometheus:
  enabled: false
deepflow-agent:
  enabled: false
grafana-agent:
  enabled: false
fluent-bit:
  enabled: false
  annotations:
    iam.amazonaws.com/role: CloudWatchAgentServerRole
  image:
    repository: artifact.onwalk.net/k8s/aws-for-fluent-bit
    tag: "2.29.0"
    pullPolicy: Always
  config:
    inputs: |
      [INPUT]
          Name tail
          Path /var/log/containers/*.log
          multiline.parser docker, cri
          Tag kube.*
          Mem_Buf_Limit 5MB
          Skip_Long_Lines On
  
    filters: |
      [FILTER]
          Name kubernetes
          Match kube.*
          Merge_Log On
          Keep_Log Off
          K8S-Logging.Parser On
          K8S-Logging.Exclude On
  
    outputs: |
      [OUTPUT]
          Name cloudwatch_logs
          region cn-northwest-1
          Match kube.*
          log_group_name log_group_name
          log_stream_name log_stream_name 
          auto_create_group true
  
    customParsers: |
      [PARSER]
          Name docker_no_time
          Format json
          Time_Keep Off
          Time_Key time
          Time_Format %Y-%m-%dT%H:%M:%S.%L
  
  daemonSetVolumes:
    - name: varlibdockercontainers
      hostPath:
        path: /var/lib/docker/containers
    - name: varlogpods
      hostPath:
        path: /var/log/pods/
    - name: varlogdockercontainers
      hostPath:
        path: /var/log/containers/
  daemonSetVolumeMounts:
    - name: varlogdockercontainers
      mountPath: /var/log/containers/
      readOnly: true
    - name: varlibdockercontainers
      mountPath: /var/lib/docker/containers
      readOnly: true
    - name: varlogpods
      mountPath: /var/log/pods/
      readOnly: true
  logLevel: info
prometheus-node-exporter:
  enabled: false
kube-state-metrics:
  enabled: true
  image:
    repository: artifact.onwalk.net/k8s/kube-state-metrics
    tag: v2.7.0
    sha: 2f4851a097ab81bead7cee8e08673fdc70511b8625ace98798ae8591c9b0c7c9
kube2iam:
  enabled: false
  aws:
    region: "cn-northwest-1"
  host:
    port: "8181"
    iptables: true
    interface: cni0
  extraArgs:
    base-role-arn: "arn:aws-cn:iam::xxxxxxxxxxx:role/"
    default-role: CloudWatchAgentServerRole
  rbac:
    create: true
  verbose: true
prometheus-to-cloudwatch:
  enabled: false
  replicaCount: 1
  podAnnotations:
    iam.amazonaws.com/role:  kube2iam-default
  env:
    CLOUDWATCH_NAMESPACE: "app-dev"
    CLOUDWATCH_REGION: "cn-northwest-1"
    CLOUDWATCH_PUBLISH_TIMEOUT: "5"
    PROMETHEUS_SCRAPE_INTERVAL: "20"
    PROMETHEUS_SCRAPE_URL: "observableagent-kube-state-metrics.monitoring.svc.cluster.local:8080/metrics"
    ACCEPT_INVALID_CERT: "true"
  image:
    repository: "artifact.onwalk.net/k8s/prometheus-to-cloudwatch"
    tag: "8a264a23"
    pullPolicy: "Always"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
